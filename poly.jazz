require "params.jazz"
require "montgomery.jazz"

inline
fn poly_add(reg ptr u32[Li2_polydeg] f g sum)
	-> reg ptr u32[Li2_polydeg]
{
	stack u32 x1 x2 y;
	inline int i;

	for i = 0 to Li2_polydeg {
		x1 = f[i];
		x2 = g[i];
		y = montgomery_add(x1, x2);
		sum[i] = y;
	}
	return sum;
}

inline
fn poly_mult(reg ptr u32[Li2_polydeg] fft_f fft_g fft_prod)
	-> reg ptr u32[Li2_polydeg]
{
	inline int i;
	stack u32 x1 x2 y;
	for i = 0 to Li2_polydeg {
		x1 = fft_f[i];
		x2 = fft_g[i];
		y = montgomery_mult(x1, x2);
		fft_prod[i] = y;
	}
	return fft_prod;
}

inline
fn zero_poly(reg ptr u32[Li2_polydeg] f)
	-> reg ptr u32[Li2_polydeg]
{
	inline int i;
	for i = 0 to Li2_polydeg {
		// Montgomery of 0 is 0
		f[i] = 0;
	}
	return f;
}
